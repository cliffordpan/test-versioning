name: CI/CD (main, staging, development)

on:
    pull_request:
        types:
            - closed
        branches:
            - main
            - staging
            - development

# permissions:
#     contents: write # needed for tagging/releases
#     actions: read
#     checks: write

jobs:
    build-and-tagging:
        if: github.event.pull_request.merged == true
        runs-on: arc-runner-set
        permissions:
            contents: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # required to compute next version from tags/history
            - name: Bump version and push tag
              id: version
              uses: paulhatch/semantic-version@v5.4.0
              with:
                  tag_prefix: ""
                  major_pattern: "/!:|BREAKING CHANGE:/"
                  minor_pattern: "/feat:/"
                  version_format: "${major}.${minor}.${patch}-pre${increment}"
                  bump_each_commit: true
                  bump_each_commit_patch_pattern: "/fix:/"
                  search_commit_body: false
                  debug: true
            - name: debugs
              run: |
                  echo ${{ steps.version.outputs.version_tag }}
                  echo ${{ steps.version.outputs.version_type  }}
                  echo ${{ steps.version.outputs.version  }}
                  echo ${{ steps.version.outputs.changed  }}
                  echo ${{ steps.version.outputs.is_tagged }}
                  echo ${{ steps.version.outputs.current_commit  }}
                  echo ${{ steps.version.outputs.previous_commit  }}
                  echo ${{ steps.version.outputs.previous_version }}
                  echo ${{ steps.version.outputs.debug_output  }}
            - name: Create and push tag
              if: ${{ ! steps.version.outputs.is_tagged }}
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git tag  ${{ steps.version.outputs.version_tag }}
                  git push origin ${{ steps.version.outputs.version_tag }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
